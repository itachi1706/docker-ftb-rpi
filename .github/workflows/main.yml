name: 'Generate Docker Images'

on:
    push:
        branches:
            - master

jobs:
    setup:
        runs-on: ubuntu-latest
        steps:
        -   name: Checkout
            uses: actions/checkout@v2.3.4
        -   name: Dockerhub login
            env:
                DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
                DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            run: |
                echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin
        -   name: Set up QEMU
            uses: docker/setup-qemu-action@v1
        -   name: Set up Docker Buildx
            id: buildx
            uses: docker/setup-buildx-action@v1
            with:
                version: latest
        -   name: Build base-image
            run: |
                docker buildx build --platform linux/arm/v7,linux/arm64,linux/amd64 -t itachi1706/rpi-ftb:jdk8-base --pull --push -f baseimage.txt .

    release:
        runs-on: ubuntu-latest
        needs: setup
        steps:
        -   name: Checkout
            uses: actions/checkout@v2.3.4
        -   name: Dockerhub login
            env:
                DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
                DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            run: |
                echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin
        -   name: Set up QEMU
            uses: docker/setup-qemu-action@v1
        -   name: Set up Docker Buildx
            id: buildx
            uses: docker/setup-buildx-action@v1
            with:
                version: latest
        -   name: Run Script with 3 retries
            id: retry
            uses: nick-invision/retry@v2.2.0
            with:
                timeout_minutes: 60
                max_attempts: 3
                retry_wait_seconds: 30
                command: |
                    chmod +x build.sh && ./build.sh
        -   name: Show results of script
            run: echo $retry_attempt. Tried $retry_result times
            env:
                retry_result: ${{ steps.retry.outputs.total_attempts }}
                retry_attempt: ${{ steps.retry.outcome }} 
